/**
 * Generated by @skyleague/therefore
 * Do not manually touch this
 */
/* eslint-disable */

import type { DefinedError, ValidateFunction } from 'ajv'

import { validate as FooDataValidator } from './schemas/foo-data.schema.js'

export interface FooData {
    message: string
}

export const FooData = {
    validate: FooDataValidator as ValidateFunction<FooData>,
    get schema() {
        return FooData.validate.schema
    },
    get errors() {
        return FooData.validate.errors ?? undefined
    },
    is: (o: unknown): o is FooData => FooData.validate(o) === true,
    parse: (o: unknown): { right: FooData } | { left: DefinedError[] } => {
        if (FooData.is(o)) {
            return { right: o }
        }
        return { left: (FooData.errors ?? []) as DefinedError[] }
    },
} as const
