/**
 * Generated by @skyleague/therefore@v1.0.0-local
 * Do not manually touch this
 */
/* eslint-disable */

export interface SqsTrigger {
    /**
     * Subscribes to an SQS queue.
     */
    sqs: {
        /**
         * The ID of the SQS queue to subscribe to.
         */
        queueId: string
        /**
         * The maximum number of messages to retrieve from the queue at once. Default is 1.
         */
        batchSize?: number | undefined
        /**
         * The FIFO settings to use when retrieving messages from the queue.
         */
        fifo?:
            | {
                  /**
                   * Whether to enable FIFO queue support. Default is false.
                   */
                  enabled?: string | undefined
                  /**
                   * Whether to enable content-based deduplication. Default is false.
                   *
                   * @default true
                   */
                  contentBasedDeduplication?: boolean | undefined
                  /**
                   * The scope of the deduplication. Default is queue.
                   *
                   * @default 'queue'
                   */
                  deduplicationScope?: 'messageGroup' | 'queue' | undefined
                  /**
                   * The throughput limit of the queue. Default is perQueue.
                   *
                   * @default 'perQueue'
                   */
                  throughputLimit?: 'perQueue' | 'perMessageGroupId' | undefined
              }
            | undefined
        /**
         * The ID of the KMS key to use to decrypt messages.
         */
        kmsMasterKeyId?: string | undefined
        /**
         * The EventBridge event bus to subscribe to.
         */
        eventbridge?:
            | {
                  /**
                   * The name of the event bus to subscribe to.
                   */
                  eventBusId: string
                  /**
                   * The event pattern to filter on.
                   */
                  eventPattern: {
                      /**
                       * The detail type of the event.
                       */
                      'detail-type'?: unknown[] | undefined
                  }
              }
            | undefined
    }
}
